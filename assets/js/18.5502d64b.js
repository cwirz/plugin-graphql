(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{184:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p"),t._m(1),a("p"),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("Installation of the GraphQL plugin is easy. First add the package to your dependencies:")]),t._v(" "),t._m(3),a("p",[t._v("or")]),t._v(" "),t._m(4),a("p",[t._v("After that we setup the plugin. Add this after "),a("a",{attrs:{href:"https://vuex-orm.github.io/vuex-orm/guide/prologue/getting-started.html#register-models-and-modules-to-the-vuex-store",target:"_blank",rel:"noopener noreferrer"}},[t._v("registering your models to the database"),a("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),a("ul",[t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("li",[a("code",[t._v("headers")]),t._v(" (optional, default: "),a("code",[t._v("{}")]),t._v(") HTTP Headers. See\n"),a("a",{attrs:{href:"https://github.com/apollographql/apollo-link/tree/master/packages/apollo-link-http#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("apollo-link-http"),a("OutboundLink")],1),t._v(".\nThis can be a static object or a function, returning a object, which will be called before a request is made.")]),t._v(" "),a("li",[a("code",[t._v("credentials")]),t._v(" (optional, default: "),a("code",[t._v("same-origin")]),t._v(") Credentials Policy. See "),a("a",{attrs:{href:"https://github.com/apollographql/apollo-link/tree/master/packages/apollo-link-http#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("apollo-link-http"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("useGETForQueries")]),t._v(" (optional, default: "),a("code",[t._v("false")]),t._v(") Use GET for queries (not for mutations). See "),a("a",{attrs:{href:"https://github.com/apollographql/apollo-link/tree/master/packages/apollo-link-http#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("apollo-link-http"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("adapter")]),t._v(" (optional, default: "),a("code",[t._v("DefaultAdapter")]),t._v("). See "),a("router-link",{attrs:{to:"./adapters.html"}},[t._v("Adapters")])],1)]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),a("p",[t._v("Here is an example configuration for AWS AppSync:")]),t._v(" "),t._m(15)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup","aria-hidden":"true"}},[this._v("#")]),this._v(" Setup")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#installation"}},[this._v("Installation")])]),e("li",[e("a",{attrs:{href:"#possible-options"}},[this._v("Possible options")])]),e("li",[e("a",{attrs:{href:"#client"}},[this._v("Client")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ yarn add @vuex-orm/plugin-graphql\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),e("span",{attrs:{class:"token function"}},[this._v("install")]),this._v(" --save @vuex-orm/plugin-graphql\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VuexORMGraphQL "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'@vuex-orm/plugin-graphql'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nVuexORM"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("use")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VuexORMGraphQL"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" database "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"possible-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#possible-options","aria-hidden":"true"}},[this._v("#")]),this._v(" Possible options")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("These are the possible options to pass when calling "),e("code",[this._v("VuexORM.use()")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("apolloClient")]),this._v(" (optional): Provide a preconfigured instance of the Apollo client. See "),e("a",{attrs:{href:"#client"}},[this._v("client")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("database")]),this._v(" (required): The Vuex-ORM database.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("debug")]),this._v(" (optional, default: "),e("code",[this._v("false")]),this._v("): Set to true to activate the debug logging.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("url")]),this._v(" (optional, default: "),e("code",[this._v("/graphql")]),this._v("): The URL to the graphql api. Will be passed to apollo-client.")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("We recommend to activate the debug mode in development env automatically via:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" debug"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#client","aria-hidden":"true"}},[this._v("#")]),this._v(" Client")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You can inject your own instance of the Apollo Client using "),e("code",[this._v("option.apolloClient")]),this._v(". This is useful if\nthe app requires a more complex configuration, such as integration wiht AWS AppSync. When "),e("code",[this._v("apolloClient")]),this._v("\nis used, "),e("code",[this._v("plugin-graphql")]),this._v(" ignores any other options to configure Apollo client.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("import VuexORM from '@vuex-orm/core'\nimport AWSAppSyncClient from 'aws-appsync'\nimport { Auth } from 'aws-amplify'\nimport VuexORMGraphQL from '@vuex-orm/plugin-graphql'\n\nimport database from '../database'\nimport awsexports from '../aws-exports'\n\nconst options = {\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network'\n    }\n  },\n  connectionQueryMode: 'nodes',\n  database: database,\n  url: awsexports.aws_appsync_graphqlEndpoint,\n  includeExtensions: true,\n  debug: process.env.NODE_ENV !== 'production'\n}\n\nconst config = {\n  url: awsexports.aws_appsync_graphqlEndpoint,\n  region: awsexports.aws_appsync_region,\n  auth: {\n    type: awsexports.aws_appsync_authenticationType,\n    jwtToken: async () => (await Auth.currentSession()).getIdToken().getJwtToken()\n  }\n}\n\nconst client = new AWSAppSyncClient(config, options)\n\noptions.apolloClient = client\n\nVuexORM.use(VuexORMGraphQL, options)\n\nexport const plugins = [\n  VuexORM.install(database)\n]\n")])])])}],!1,null,null,null);e.default=n.exports}}]);